{"is_source_file": true, "format": "Python", "description": "This file manages storage operations for notes, including serialization/deserialization, loading, saving, ID generation, and retrieval by ID, for a note-taking application.", "external_files": ["notes_models.py"], "external_methods": [], "published": ["load_notes", "save_notes", "get_next_id", "get_note_by_id"], "classes": [], "methods": [{"name": "dict _serialize_note(note: Note)", "description": "Converts a Note object into a serializable dictionary.", "scope": "", "scopeKind": ""}, {"name": "Note _deserialize_note(data: dict)", "description": "Creates a Note object from a dictionary loaded from JSON.", "scope": "", "scopeKind": ""}, {"name": "List[Note] load_notes()", "description": "Loads all notes from the storage JSON file.", "scope": "", "scopeKind": ""}, {"name": "None save_notes(notes: List[Note])", "description": "Saves a list of notes to the storage JSON file.", "scope": "", "scopeKind": ""}, {"name": "int get_next_id(notes: List[Note])", "description": "Calculates the next available ID based on existing notes.", "scope": "", "scopeKind": ""}, {"name": "Optional[Note] get_note_by_id(notes: List[Note], note_id: int)", "description": "Finds and returns a note with the specified ID, or None if not found.", "scope": "", "scopeKind": ""}], "calls": ["json.load", "json.dump", "_deserialize_note", "_serialize_note", "Path.exists", "Path.open", "max"], "search-terms": ["notes_storage", "serialization", "JSON", "Note", "load_notes", "save_notes"], "state": 2, "file_id": 6, "knowledge_revision": 13, "git_revision": "", "ctags": [{"_type": "tag", "name": "NOTES_FILE", "path": "/home/kavia/workspace/code-generation/note-keeper-0c53cb89/notes_backend/src/api/notes_storage.py", "pattern": "/^NOTES_FILE = Path(__file__).parent.parent \\/ \"notes_data.json\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_deserialize_note", "path": "/home/kavia/workspace/code-generation/note-keeper-0c53cb89/notes_backend/src/api/notes_storage.py", "pattern": "/^def _deserialize_note(data: dict) -> Note:$/", "language": "Python", "typeref": "typename:Note", "kind": "function", "signature": "(data: dict)"}, {"_type": "tag", "name": "_serialize_note", "path": "/home/kavia/workspace/code-generation/note-keeper-0c53cb89/notes_backend/src/api/notes_storage.py", "pattern": "/^def _serialize_note(note: Note) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(note: Note)"}, {"_type": "tag", "name": "get_next_id", "path": "/home/kavia/workspace/code-generation/note-keeper-0c53cb89/notes_backend/src/api/notes_storage.py", "pattern": "/^def get_next_id(notes: List[Note]) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "(notes: List[Note])"}, {"_type": "tag", "name": "get_note_by_id", "path": "/home/kavia/workspace/code-generation/note-keeper-0c53cb89/notes_backend/src/api/notes_storage.py", "pattern": "/^def get_note_by_id(notes: List[Note], note_id: int) -> Optional[Note]:$/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "function", "signature": "(notes: List[Note], note_id: int)"}, {"_type": "tag", "name": "load_notes", "path": "/home/kavia/workspace/code-generation/note-keeper-0c53cb89/notes_backend/src/api/notes_storage.py", "pattern": "/^def load_notes() -> List[Note]:$/", "language": "Python", "typeref": "typename:List[Note]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "save_notes", "path": "/home/kavia/workspace/code-generation/note-keeper-0c53cb89/notes_backend/src/api/notes_storage.py", "pattern": "/^def save_notes(notes: List[Note]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(notes: List[Note])"}], "hash": "5899e9732426587642c3eba0b1617439", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/notes_storage.py", "fields": [{"name": "NOTES_FILE = Path(__file__).parent.parent \\/ \"notes_data.json\"", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"13": ""}]}